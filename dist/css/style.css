/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* Remove default button styles */
button {
  background-color: unset;
  padding: unset;
}

/* Remove list styles on ul, ol elements with a list role, which suggests
default styling will be removed */
ul,
ol {
  list-style: none;
  padding: unset;
  margin: unset;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
video,
canvas,
svg {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
  border: none;
}

/* Inherit font color for elements that don't already */
a,
button {
  color: inherit;
}

/* Ensure buttons have pointer cursor */
button {
  cursor: pointer;
}

/* Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* Remove all animations, transitions and smooth scroll for people that prefer
not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
*::before,
*::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:root {
  --neutral-color-100: hsl(0, 0%, 100%);
  --neutral-color-200: hsl(0, 0%, 90%);
  --neutral-color-300: hsl(0, 0%, 70%);
  --neutral-color-900: hsl(0, 0%, 8%);
  --neutral-color-900-transparent: hsla(0, 0%, 0%, 0.7);
  --accent-color: hsl(357, 92%, 47%);
}

html,
body {
  color: var(--neutral-color-100);
  font-family: "Open Sans", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.6;
}

body {
  background-color: var(--neutral-color-900);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.1;
}

a {
  text-decoration: none;
}

.sr-only {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.container {
  padding: 1rem clamp(1rem, 4vw + 0.1rem, 3rem);
  width: min(100%, 80rem);
  margin-inline: auto;
}

.header {
  position: fixed;
  inset: 0 0 auto;
}
.header__container {
  background-image: linear-gradient(to bottom, var(--neutral-color-900-transparent) 10%, transparent);
  display: flex;
  align-items: center;
  gap: 2rem;
}

.main-title {
  width: clamp(5rem, 10vw + 1rem, 7.5rem);
}

.nav {
  font-size: 0.9rem;
  display: flex;
  gap: 1rem;
}
.nav a:not(.active) {
  color: var(--neutral-color-200);
}
.nav a:not(.active):hover {
  color: var(--neutral-color-300);
}
.nav a.active {
  font-weight: 600;
}

.hero {
  display: grid;
}
.hero__image-wrapper, .hero__container {
  grid-column: 1;
  grid-row: 1;
}
.hero__image-wrapper {
  position: relative;
  max-height: 40rem;
  z-index: -1;
  user-select: none;
}
.hero__image-wrapper > img {
  object-fit: cover;
  object-position: 70%;
  height: 100%;
  width: 100%;
}
.hero__image-wrapper .left-vignette {
  background-image: linear-gradient(to right, var(--neutral-color-900-transparent), transparent);
  position: absolute;
  inset: 0 auto;
  width: 50%;
}
.hero__image-wrapper .bottom-vignette {
  background-image: linear-gradient(to top, var(--neutral-color-900), transparent);
  position: absolute;
  inset: auto 0 -1px;
  height: 30%;
}
.hero__container {
  padding-block: clamp(4rem, 10vw + 1rem, 8rem);
}
.hero__content {
  display: grid;
  gap: 1rem;
  max-width: 40rem;
}
.hero__title, .hero__synopsis {
  text-shadow: 2px 2px 4px var(--neutral-color-900-transparent);
}
.hero__title {
  font-size: clamp(2rem, 5vw + 1rem, 4rem);
}
.hero__buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.button {
  font-weight: 600;
  display: flex;
  gap: 0.5rem;
  padding: 0.5rem 1.5rem;
  border-radius: 0.25rem;
}

.button--primary {
  color: black;
  background-color: white;
}
.button--primary:hover {
  background-color: rgba(255, 255, 255, 0.75);
}

.button--secondary {
  color: white;
  background-color: rgba(102, 102, 102, 0.75);
}
.button--secondary:hover {
  background-color: rgba(102, 102, 102, 0.5);
}

/*# sourceMappingURL=style.css.map */
